
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 5.17.0
 * Query Engine version: 393aa359c9ad4a4bb28630fb5613f9c281cde053
 */
Prisma.prismaVersion = {
  client: "5.17.0",
  engine: "393aa359c9ad4a4bb28630fb5613f9c281cde053"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.NotFoundError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`NotFoundError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}

/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  image: 'image',
  password: 'password',
  isOAuth: 'isOAuth',
  role: 'role',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.LocationScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  coverImage: 'coverImage',
  category: 'category',
  province: 'province',
  district: 'district',
  latitude: 'latitude',
  longitude: 'longitude',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.FavoriteScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  locationId: 'locationId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.BlogScalarFieldEnum = {
  id: 'id',
  title: 'title',
  content: 'content',
  authorId: 'authorId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  category: 'category'
};

exports.Prisma.BlogCommentScalarFieldEnum = {
  id: 'id',
  blogId: 'blogId',
  userId: 'userId',
  content: 'content',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ReplyScalarFieldEnum = {
  id: 'id',
  commentId: 'commentId',
  userId: 'userId',
  content: 'content',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.BlogVoteScalarFieldEnum = {
  id: 'id',
  blogId: 'blogId',
  userId: 'userId',
  type: 'type',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CommentVoteScalarFieldEnum = {
  id: 'id',
  commentId: 'commentId',
  userId: 'userId',
  type: 'type',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ReplyVoteScalarFieldEnum = {
  id: 'id',
  replyId: 'replyId',
  userId: 'userId',
  type: 'type',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TripScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  startDate: 'startDate',
  endDate: 'endDate',
  hotelName: 'hotelName',
  hotelAddress: 'hotelAddress',
  locationId: 'locationId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TripParticipantsScalarFieldEnum = {
  id: 'id',
  tripId: 'tripId',
  userId: 'userId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.EventScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  coverImage: 'coverImage',
  startDate: 'startDate',
  endDate: 'endDate',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.EventLocationScalarFieldEnum = {
  id: 'id',
  eventId: 'eventId',
  locationId: 'locationId',
  description: 'description'
};

exports.Prisma.SaveEventScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  eventId: 'eventId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ChatScalarFieldEnum = {
  id: 'id',
  role: 'role',
  content: 'content',
  titleChatId: 'titleChatId',
  createdAt: 'createdAt'
};

exports.Prisma.TitleChatScalarFieldEnum = {
  id: 'id',
  title: 'title',
  userId: 'userId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.Role = exports.$Enums.Role = {
  USER: 'USER',
  ADMIN: 'ADMIN'
};

exports.Category = exports.$Enums.Category = {
  natural: 'natural',
  historical: 'historical',
  cultural: 'cultural',
  religious: 'religious',
  urban: 'urban',
  beach: 'beach',
  mountain: 'mountain',
  adventure: 'adventure',
  resort: 'resort',
  other: 'other'
};

exports.Province = exports.$Enums.Province = {
  AN_GIANG: 'AN_GIANG',
  BA_RIA_VUNG_TAU: 'BA_RIA_VUNG_TAU',
  BAC_GIANG: 'BAC_GIANG',
  BAC_KAN: 'BAC_KAN',
  BAC_LIEU: 'BAC_LIEU',
  BAC_NINH: 'BAC_NINH',
  BEN_TRE: 'BEN_TRE',
  BINH_DINH: 'BINH_DINH',
  BINH_DUONG: 'BINH_DUONG',
  BINH_PHUOC: 'BINH_PHUOC',
  BINH_THUAN: 'BINH_THUAN',
  CA_MAU: 'CA_MAU',
  CAO_BANG: 'CAO_BANG',
  DAK_LAK: 'DAK_LAK',
  DAK_NONG: 'DAK_NONG',
  DIEN_BIEN: 'DIEN_BIEN',
  DONG_NAI: 'DONG_NAI',
  DONG_THAP: 'DONG_THAP',
  GIA_LAI: 'GIA_LAI',
  HA_GIANG: 'HA_GIANG',
  HA_NAM: 'HA_NAM',
  HA_TINH: 'HA_TINH',
  HAI_DUONG: 'HAI_DUONG',
  HAU_GIANG: 'HAU_GIANG',
  HOA_BINH: 'HOA_BINH',
  HUNG_YEN: 'HUNG_YEN',
  KHANH_HOA: 'KHANH_HOA',
  KIEN_GIANG: 'KIEN_GIANG',
  KON_TUM: 'KON_TUM',
  LAI_CHAU: 'LAI_CHAU',
  LAM_DONG: 'LAM_DONG',
  LANG_SON: 'LANG_SON',
  LAO_CAI: 'LAO_CAI',
  LONG_AN: 'LONG_AN',
  NAM_DINH: 'NAM_DINH',
  NGHE_AN: 'NGHE_AN',
  NINH_BINH: 'NINH_BINH',
  NINH_THUAN: 'NINH_THUAN',
  PHU_THO: 'PHU_THO',
  PHU_YEN: 'PHU_YEN',
  QUANG_BINH: 'QUANG_BINH',
  QUANG_NAM: 'QUANG_NAM',
  QUANG_NGAI: 'QUANG_NGAI',
  QUANG_NINH: 'QUANG_NINH',
  QUANG_TRI: 'QUANG_TRI',
  SOC_TRANG: 'SOC_TRANG',
  SON_LA: 'SON_LA',
  TAY_NINH: 'TAY_NINH',
  THAI_BINH: 'THAI_BINH',
  THAI_NGUYEN: 'THAI_NGUYEN',
  THANH_HOA: 'THANH_HOA',
  THUA_THIEN_HUE: 'THUA_THIEN_HUE',
  TIEN_GIANG: 'TIEN_GIANG',
  TRA_VINH: 'TRA_VINH',
  TUYEN_QUANG: 'TUYEN_QUANG',
  VINH_LONG: 'VINH_LONG',
  VINH_PHUC: 'VINH_PHUC',
  YEN_BAI: 'YEN_BAI',
  HA_NOI: 'HA_NOI',
  HAI_PHONG: 'HAI_PHONG',
  DA_NANG: 'DA_NANG',
  HO_CHI_MINH: 'HO_CHI_MINH',
  CAN_THO: 'CAN_THO'
};

exports.VoteType = exports.$Enums.VoteType = {
  UP: 'UP',
  DOWN: 'DOWN'
};

exports.ChatRole = exports.$Enums.ChatRole = {
  USER: 'USER',
  ASSISTANT: 'ASSISTANT',
  SYSTEM: 'SYSTEM'
};

exports.Prisma.ModelName = {
  User: 'User',
  Location: 'Location',
  Favorite: 'Favorite',
  Blog: 'Blog',
  BlogComment: 'BlogComment',
  Reply: 'Reply',
  BlogVote: 'BlogVote',
  CommentVote: 'CommentVote',
  ReplyVote: 'ReplyVote',
  Trip: 'Trip',
  TripParticipants: 'TripParticipants',
  Event: 'Event',
  EventLocation: 'EventLocation',
  SaveEvent: 'SaveEvent',
  Chat: 'Chat',
  TitleChat: 'TitleChat'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }
        
        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
